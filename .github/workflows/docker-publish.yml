name: Docker Build and Push to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=sha,prefix=sha-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Update package visibility
      run: |
        # Wait a moment for the package to be created
        sleep 10
        
        # Try to make the package public (handle both user and org repos)
        if [[ "${{ github.repository_owner }}" == "${{ github.actor }}" ]]; then
          # Personal repository
          PACKAGE_URL="/users/${{ github.repository_owner }}/packages/container/${{ github.event.repository.name }}/settings"
        else
          # Organization repository
          PACKAGE_URL="/orgs/${{ github.repository_owner }}/packages/container/${{ github.event.repository.name }}/settings"
        fi
        
        # Make the package public with error handling
        gh api \
          --method PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "$PACKAGE_URL" \
          -f visibility=public || echo "Failed to update package visibility - package may already be public or require manual configuration"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create deployment summary
      run: |
        echo "# Docker Image Published" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Image Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: \`ghcr.io/${{ github.repository }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Tags**: \`${{ steps.meta.outputs.tags }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Visibility**: Public" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Usage" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Pull the latest image" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ghcr.io/${{ github.repository }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Run the container" >> $GITHUB_STEP_SUMMARY
        echo "docker run -d \\" >> $GITHUB_STEP_SUMMARY
        echo "  --name kbase \\" >> $GITHUB_STEP_SUMMARY
        echo "  -p 8000:8000 \\" >> $GITHUB_STEP_SUMMARY
        echo "  -v /path/to/your/vault:/app/vault \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e VAULT_PATH=/app/vault \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e SECRET_KEY=your-secret-key \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e PASSWORD=your-password \\" >> $GITHUB_STEP_SUMMARY
        echo "  ghcr.io/${{ github.repository }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

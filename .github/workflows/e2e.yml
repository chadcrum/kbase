name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        python-version: '3.11'
        enable-cache: true
        
    - name: Install Python dependencies
      run: |
        cd backend
        uv sync
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Create test vault
      run: |
        mkdir -p /tmp/kbase-test-vault
        echo "# Welcome to KBase" > /tmp/kbase-test-vault/welcome.md
        echo "# Test Note" > /tmp/kbase-test-vault/test.md
        
    - name: Start backend server
      run: |
        cd backend
        uv run python run.py &
        sleep 10
      env:
        VAULT_PATH: /tmp/kbase-test-vault
        SECRET_KEY: test-secret-key-for-jwt-signing-in-e2e-tests
        PASSWORD: test-password
        PORT: 8000
        HOST: 0.0.0.0
        
    - name: Wait for backend to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:8000/health; do sleep 2; done'
        
    - name: Install Playwright browsers
      run: |
        cd frontend
        npx playwright install --with-deps ${{ matrix.browser }}
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Start frontend dev server
      run: |
        cd frontend
        npm run dev &
        sleep 10
      env:
        VITE_API_URL: http://localhost:8000
        
    - name: Wait for frontend to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:5173; do sleep 2; done'
        
    - name: Run E2E tests
      run: |
        cd frontend
        npm run test:e2e -- --project=${{ matrix.browser }} --reporter=github
      env:
        CI: true
        TEST_BACKEND_URL: http://localhost:8000
        TEST_VAULT_PATH: /tmp/kbase-test-vault
        TEST_SECRET_KEY: test-secret-key-for-jwt-signing-in-e2e-tests
        TEST_PASSWORD: test-password
        VITE_API_URL: http://localhost:8000
      continue-on-error: true
        
    - name: List test artifacts
      run: |
        cd frontend
        echo "Checking for test artifacts..."
        ls -la playwright-report/ || echo "No playwright-report directory found"
        ls -la test-results/ || echo "No test-results directory found"
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: frontend/playwright-report/
        retention-days: 30
        
    - name: Upload test videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}
        path: frontend/test-results/
        retention-days: 30

  e2e-tests-mobile:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        python-version: '3.11'
        enable-cache: true
        
    - name: Install Python dependencies
      run: |
        cd backend
        uv sync
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Create test vault
      run: |
        mkdir -p /tmp/kbase-test-vault
        echo "# Welcome to KBase" > /tmp/kbase-test-vault/welcome.md
        echo "# Test Note" > /tmp/kbase-test-vault/test.md
        
    - name: Start backend server
      run: |
        cd backend
        uv run python run.py &
        sleep 10
      env:
        VAULT_PATH: /tmp/kbase-test-vault
        SECRET_KEY: test-secret-key-for-jwt-signing-in-e2e-tests
        PASSWORD: test-password
        PORT: 8000
        HOST: 0.0.0.0
        
    - name: Wait for backend to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:8000/health; do sleep 2; done'
        
    - name: Install Playwright browsers
      run: |
        cd frontend
        npx playwright install --with-deps
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Start frontend dev server
      run: |
        cd frontend
        npm run dev &
        sleep 10
      env:
        VITE_API_URL: http://localhost:8000
        
    - name: Wait for frontend to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:5173; do sleep 2; done'
        
    - name: Run mobile E2E tests
      run: |
        cd frontend
        npm run test:e2e -- --project="Mobile Chrome" --project="Mobile Safari" --reporter=github
      env:
        CI: true
        TEST_BACKEND_URL: http://localhost:8000
        TEST_VAULT_PATH: /tmp/kbase-test-vault
        TEST_SECRET_KEY: test-secret-key-for-jwt-signing-in-e2e-tests
        TEST_PASSWORD: test-password
        VITE_API_URL: http://localhost:8000
      continue-on-error: true
        
    - name: List mobile test artifacts
      run: |
        cd frontend
        echo "Checking for mobile test artifacts..."
        ls -la playwright-report/ || echo "No playwright-report directory found"
        ls -la test-results/ || echo "No test-results directory found"
        
    - name: Upload mobile test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-mobile
        path: frontend/playwright-report/
        retention-days: 30

  test-summary:
    needs: [e2e-tests, e2e-tests-mobile]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create test summary
      run: |
        echo "# E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Desktop Browsers" >> $GITHUB_STEP_SUMMARY
        echo "- Chromium: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Firefox: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- WebKit: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Mobile Browsers" >> $GITHUB_STEP_SUMMARY
        echo "- Mobile Chrome: ${{ needs.e2e-tests-mobile.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Mobile Safari: ${{ needs.e2e-tests-mobile.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "Test reports and videos have been uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
